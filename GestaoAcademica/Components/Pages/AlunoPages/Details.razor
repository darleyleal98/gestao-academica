@page "/alunos/details"
@inject GestaoAcademica.Data.DatabaseContext DB
@using StudentGuide.Models
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h4>Aluno</h4>
    <hr />
    @if (aluno is null)
    {
        <p><em>Carregando...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">RU</dt>
            <dd class="col-sm-10">@aluno.RU</dd>
            <dt class="col-sm-2">Nome</dt>
            <dd class="col-sm-10">@aluno.Nome</dd>
            <dt class="col-sm-2">Idade</dt>
            <dd class="col-sm-10">@aluno.Idade</dd>
            <dt class="col-sm-2">Endereco</dt>
            <dd class="col-sm-10">@aluno.Endereco</dd>
            <dt class="col-sm-2">Email</dt>
            <dd class="col-sm-10">@aluno.Email</dd>
            <dt class="col-sm-2">Telefone</dt>
            <dd class="col-sm-10">@aluno.Telefone</dd>
        </dl>
        <div>
            <a href="@($"/alunos/edit?id={aluno.Id}")">Editar</a> |
            <a href="@($"/alunos")">Voltar</a>
        </div>
    }
</div>

@code {
    Aluno? aluno;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        aluno = await DB.Alunos.FirstOrDefaultAsync(m => m.Id == Id);

        if (aluno is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
